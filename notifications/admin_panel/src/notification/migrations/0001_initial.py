# Generated by Django 4.2 on 2023-04-20 09:06

import uuid

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [

        migrations.RunSQL("CREATE SCHEMA IF NOT EXISTS notifications;"),

        migrations.CreateModel(
            name='NotificationHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('user_id', models.UUIDField()),
                ('transport', models.CharField(choices=[('sms', 'Sms'), ('email', 'Email'), ('push', 'Push')], default='email', max_length=50)),
                ('send', models.BooleanField(default=False)),
                ('subject', models.TextField(blank=True)),
                ('message', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'notifications"."notification_history',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('pending', 'В очередь на отправку'), ('done', 'Отправлено'), ('cancelled', 'Отменено')], default='pending', max_length=50)),
                ('priority', models.CharField(choices=[('high', 'Высокий приоритет'), ('medium', 'Средний приоритет'), ('low', 'Низкий приоритет')], default='low', max_length=50)),
                ('context', models.JSONField(default=dict)),
                ('user_ids', models.TextField(blank=True)),
                ('scheduled_datetime', models.DateTimeField(blank=True, null=True)),
                ('execution_datetime', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'notifications"."tasks',
            },
        ),
        migrations.CreateModel(
            name='Template',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=250)),
                ('code', models.CharField(choices=[('common', 'Обычное письмо'), ('monthly_personal_statistic', 'Ежемесячная персональная статистика')], max_length=50)),
                ('transport', models.CharField(choices=[('sms', 'Sms'), ('email', 'Email'), ('push', 'Push')], default='email', max_length=50)),
                ('subject', models.TextField(blank=True)),
                ('body_template', models.TextField()),
            ],
            options={
                'db_table': 'notifications"."templates',
            },
        ),
        migrations.AddIndex(
            model_name='template',
            index=models.Index(fields=['transport'], name='transport_idx'),
        ),
        migrations.AddIndex(
            model_name='template',
            index=models.Index(fields=['code'], name='code_idx'),
        ),
        migrations.AddIndex(
            model_name='template',
            index=models.Index(fields=['title'], name='title_idx'),
        ),
        migrations.AddField(
            model_name='task',
            name='template',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='notification.template'),
        ),
        migrations.AddIndex(
            model_name='notificationhistory',
            index=models.Index(fields=['user_id', 'transport'], name='user_id_transport_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationhistory',
            index=models.Index(fields=['user_id', 'send'], name='user_id_send_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['priority'], name='priority_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['status', 'priority'], name='status_priority_idx'),
        ),
    ]
